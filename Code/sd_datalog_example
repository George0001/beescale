/*
  SD card datalogger
 
 This example shows how to log 3 values
 to an SD card using the SD library.
 	
 The circuit:
 * SD card attached to SPI bus as follows:
 ** MOSI - pin 11
 ** MISO - pin 12
 ** CLK - pin 13
 ** CS - pin 4
 
 based on datalogger sd library example by Tom Igoe
 modified for the beescale Project Oct 2015
 This example code is in the public domain.
 	
 */

#include <SD.h>

// On the Ethernet Shield, CS is pin 4. Note that even if it's not
// used as the CS pin, the hardware CS pin (10 on most Arduino boards,
// 53 on the Mega) must be left as an output or the SD library
// functions will not work.
const int chipSelect = 4;

void setup()
{
 // Open serial communications and wait for port to open:
  Serial.begin(9600);
 

  Serial.print("Initializing SD card...");
  // make sure that the default chip select pin is set to
  // output, even if you don't use it:
  pinMode(10, OUTPUT);
  
  // see if the card is present and can be initialized:
  if (!SD.begin(chipSelect)) {
    Serial.println("Card failed, or not present");
    // don't do anything more:
    return;
  }
  Serial.println("card initialized.");
  
  
  int maza=10;
float humid=55;
float therm=28.5;


  
  
for(int i=0; i<10; i++){
	// open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
	File dataFile = SD.open("datalog.txt", FILE_WRITE);
  // if the file is available, write to it:
  if (dataFile) {
    dataFile.print(maza);
    dataFile.print(";  ");
    dataFile.print(humid);
    dataFile.print(";  ");
    dataFile.println(therm);
    dataFile.close();
    // print to the serial port too:
    Serial.println("finished");
  }  
  // if the file isn't open, pop up an error:
  else {
    Serial.println("error opening datalog.txt");
  } 
}
}

void loop()
{


}
